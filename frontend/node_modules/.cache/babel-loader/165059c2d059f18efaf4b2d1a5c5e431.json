{"ast":null,"code":"import _defineProperty from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nigel/my-website/src/components/blog/AddCommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nvar AddCommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddCommentForm, _Component);\n\n  function AddCommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddCommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddCommentForm).call(this, props));\n    _this.state = {\n      author: \"\",\n      email: \"\",\n      content: \"\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddCommentForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n      console.log(this.state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      console.log(this.state);\n      event.preventDefault();\n      axios.post(\"https://nigelhaney.me/api/blog/comments\", {\n        \"author\": this.state.author,\n        \"content\": this.state.content,\n        \"post_id\": this.props.post_id\n      }).then(function (res) {\n        _this2.props.changeHandler;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Leave a comment!\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        name: \"author\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Comment:\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"5\",\n        placeholder: \"Enter your comment\",\n        name: \"content\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AddCommentForm;\n}(Component);\n\nAddCommentForm.propTypes = {\n  post_id: PropTypes.number.isRequired,\n  changeHandler: PropTypes.function.isRequired\n};\nexport default AddCommentForm;","map":{"version":3,"sources":["/home/nigel/my-website/src/components/blog/AddCommentForm.js"],"names":["React","Component","PropTypes","axios","Form","Button","AddCommentForm","props","state","author","email","content","handleChange","bind","handleSubmit","event","setState","target","name","value","console","log","preventDefault","post","post_id","then","res","changeHandler","propTypes","number","isRequired","function"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; \n\nclass AddCommentForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tauthor: \"\",\n\t\t\temail: \"\",\n\t\t\tcontent: \"\"\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t};\n\n\thandleChange(event) {\n\t\tthis.setState({[event.target.name]: event.target.value});\n\t\tconsole.log(this.state);\n\t};\n\n\thandleSubmit(event) {\n\t\tconsole.log(this.state);\n\t\tevent.preventDefault();\n\n\t\taxios.post(\"https://nigelhaney.me/api/blog/comments\", \n\t\t\t{ \"author\": this.state.author,\n\t\t\t  \"content\": this.state.content,\n\t\t\t  \"post_id\": this.props.post_id}).then(res => {\n\t\t\t  \tthis.props.changeHandler\n\t\t\t  })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Leave a comment!</h2>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Form.Group controlId=\"author\">\n\t\t\t\t\t\t<Form.Label>Name:</Form.Label>\n\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter your name\"\n\t\t\t\t\t\t\t\t\t  name=\"author\" \n\t\t\t\t\t\t\t\t\t  onChange={this.handleChange} />\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId=\"email\">\n\t\t\t\t\t\t<Form.Label>Email:</Form.Label>\n\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter your email\"\n\t\t\t\t\t\t\t\t\t  name=\"email\"\n\t\t\t\t\t\t\t\t\t  onChange={this.handleChange} />\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId=\"content\">\n\t\t\t\t\t\t<Form.Label>Comment:</Form.Label>\n\t\t\t\t\t\t<Form.Control as=\"textarea\" rows=\"5\"\n\t\t\t\t\t\t\t\t\t  placeholder=\"Enter your comment\"\n\t\t\t\t\t\t\t\t\t  name=\"content\"\n\t\t\t\t\t\t\t\t\t  onChange={this.handleChange} />\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAddCommentForm.propTypes = {\n\tpost_id: PropTypes.number.isRequired,\n\tchangeHandler: PropTypes.function.isRequired\n}\n\nexport default AddCommentForm;"]},"metadata":{},"sourceType":"module"}