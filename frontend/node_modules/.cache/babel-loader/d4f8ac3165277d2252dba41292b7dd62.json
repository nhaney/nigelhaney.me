{"ast":null,"code":"import _classCallCheck from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/nigel/my-website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nigel/my-website/src/components/blog/CommentContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Comment from './Comment';\nimport AddCommentForm from './AddCommentForm';\nimport Loader from 'react-loader-spinner';\n\nvar CommentContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentContainer, _Component);\n\n  function CommentContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CommentContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentContainer).call(this, props));\n    _this.state = {\n      comments: [],\n      isLoading: true\n    };\n    _this.commentChangeHandler = _this.commentChangeHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommentContainer, [{\n    key: \"commentChangeHandler\",\n    value: function commentChangeHandler(new_comment) {\n      this.setState({\n        comments: this.state.comments.concat([new_comment]),\n        isLoading: true\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get(\"https://nigelhaney.me/api/blog/comments/\" + this.props.post_id).then(function (res) {\n        _this2.setState({\n          comments: res.data.data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var _this3 = this;\n\n      axios.get(\"https://nigelhaney.me/api/blog/comments/\" + this.props.post_id).then(function (res) {\n        _this3.setState({\n          comments: res.data.data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Comments (\", this.state.comments.length, \"):\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), this.state.isLoading && React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Loading comments...\")), React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"TailSpin\",\n        color: \"#000\",\n        height: \"75\",\n        width: \"75\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), !this.state.isLoading && React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.comments.map(function (item, i) {\n        return React.createElement(Row, {\n          key: item.comment_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Comment, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(AddCommentForm, {\n        post_id: this.props.post_id,\n        changeHandler: this.commentChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CommentContainer;\n}(Component);\n\nCommentContainer.propTypes = {\n  post_id: PropTypes.number.isRequired\n};\nexport default CommentContainer;","map":{"version":3,"sources":["/home/nigel/my-website/src/components/blog/CommentContainer.js"],"names":["React","Component","PropTypes","axios","Container","Row","Col","Comment","AddCommentForm","Loader","CommentContainer","props","state","comments","isLoading","commentChangeHandler","bind","new_comment","setState","concat","get","post_id","then","res","data","length","map","item","i","comment_id","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Comment from './Comment';\nimport AddCommentForm from './AddCommentForm';\nimport Loader from 'react-loader-spinner';\n\nclass CommentContainer extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcomments: [],\n\t\t\tisLoading: true\n\t\t};\n\n\t\tthis.commentChangeHandler = this.commentChangeHandler.bind(this);\n\t};\n\n\tcommentChangeHandler(new_comment) {\n\t\tthis.setState({comments:this.state.comments.concat([new_comment]),\n\t\t\t\t\t   isLoading: true});\n\t};\n\n\tcomponentWillMount() {\n\t\taxios.get(\"https://nigelhaney.me/api/blog/comments/\" + this.props.post_id)\n\t\t\t.then(res => {\n\t\t\tthis.setState({comments: res.data.data,\n\t\t\t\t\t\t   isLoading: false});\n\t\t});\n\t};\n\n\tcomponentWillUpdate() {\n\t\taxios.get(\"https://nigelhaney.me/api/blog/comments/\" + this.props.post_id)\n\t\t\t.then(res => {\n\t\t\tthis.setState({comments: res.data.data,\n\t\t\t\t\t\t   isLoading: false});\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h2>Comments ({this.state.comments.length}):</h2>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<hr />\n\t\t\t\t{this.state.isLoading &&\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h3>Loading comments...</h3>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t<Loader type=\"TailSpin\" color=\"#000\" height=\"75\" width=\"75\"/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t}\n\t\t\t\t{!this.state.isLoading &&\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.comments.map((item, i) => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<Row key={item.comment_id}>\n\t\t\t\t\t\t\t\t\t\t<Comment item={item} />\n\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<AddCommentForm post_id={this.props.post_id} changeHandler={this.commentChangeHandler} />\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t);\n\t};\n}\n\nCommentContainer.propTypes = {\n\tpost_id: PropTypes.number.isRequired\n}\n\n\nexport default CommentContainer;\n"]},"metadata":{},"sourceType":"module"}